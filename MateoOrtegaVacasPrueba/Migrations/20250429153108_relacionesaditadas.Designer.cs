// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MateoOrtegaVacasPrueba.Migrations
{
    [DbContext(typeof(MateoBDC))]
    [Migration("20250429153108_relacionesaditadas")]
    partial class relacionesaditadas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MateoOrtegaVacasPrueba.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("MateoOrtegaVacas")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PuntosAcumulados")
                        .HasColumnType("int");

                    b.Property<bool>("ReservaVigente")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalGastos")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("MateoOrtegaVacasPrueba.Models.Recompensa", b =>
                {
                    b.Property<int>("IdRecompensa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRecompensa"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Puntos")
                        .HasColumnType("int");

                    b.Property<string>("TipoRecompensa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRecompensa");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Recompensa");
                });

            modelBuilder.Entity("MateoOrtegaVacasPrueba.Models.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReserva"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PagoReserva")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdReserva");

                    b.HasIndex("ClienteId");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("MateoOrtegaVacasPrueba.Models.Recompensa", b =>
                {
                    b.HasOne("MateoOrtegaVacasPrueba.Models.Cliente", "Cliente")
                        .WithOne("Recompensa")
                        .HasForeignKey("MateoOrtegaVacasPrueba.Models.Recompensa", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("MateoOrtegaVacasPrueba.Models.Reserva", b =>
                {
                    b.HasOne("MateoOrtegaVacasPrueba.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("MateoOrtegaVacasPrueba.Models.Cliente", b =>
                {
                    b.Navigation("Recompensa");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
