// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MateoOrtegaVacasPrueba.Migrations
{
    [DbContext(typeof(MateoBDC))]
    [Migration("20250429132923_Primera")]
    partial class Primera
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MateoOrtegaVacasPrueba.Models.Cliente", b =>
                {
                    b.Property<int>("idCliente")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCliente"));

                    b.Property<DateTime>("fechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("idRecompensa")
                        .HasColumnType("int");

                    b.Property<int>("idReserva")
                        .HasColumnType("int");

                    b.Property<string>("mateoOrtegaVacas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("reservaVigente")
                        .HasColumnType("bit");

                    b.Property<float>("totalGastos")
                        .HasColumnType("real");

                    b.HasKey("idCliente");

                    b.HasIndex("idRecompensa");

                    b.HasIndex("idReserva")
                        .IsUnique();

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("MateoOrtegaVacasPrueba.Models.Recompensa", b =>
                {
                    b.Property<int>("idRecompensa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRecompensa"));

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("puntos")
                        .HasColumnType("int");

                    b.Property<string>("tipoRecompensa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idRecompensa");

                    b.ToTable("Recompensa");
                });

            modelBuilder.Entity("MateoOrtegaVacasPrueba.Models.Reserva", b =>
                {
                    b.Property<int>("idReserva")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idReserva"));

                    b.Property<DateTime>("fechaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<float>("pagoreserva")
                        .HasColumnType("real");

                    b.HasKey("idReserva");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("MateoOrtegaVacasPrueba.Models.Cliente", b =>
                {
                    b.HasOne("MateoOrtegaVacasPrueba.Models.Recompensa", "Recompensa")
                        .WithMany()
                        .HasForeignKey("idRecompensa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MateoOrtegaVacasPrueba.Models.Reserva", "Reserva")
                        .WithOne("infoCliente")
                        .HasForeignKey("MateoOrtegaVacasPrueba.Models.Cliente", "idReserva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recompensa");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("MateoOrtegaVacasPrueba.Models.Reserva", b =>
                {
                    b.Navigation("infoCliente")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
